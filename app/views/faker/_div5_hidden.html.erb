<div id="div5_hidden" style=" background-color:white; display:none;   border:solid; width:1200px; height:750px; float:left;">
	<h3 style="background-color:#8C8C8C;">translate("faker.#{key} ") </h3>
	<h4>-faker/lib/faker.rb</h4>
	<hr/>
	<p>
		<pre>
def translate(*args)
    opts = args.last.is_a?(Hash) ? args.pop : {}
    opts[:locale] ||= Faker::Config.locale
    opts[:raise] = true
    I18n.translate(*(args.push(opts)))
   rescue I18n::MissingTranslationData
    # Super-simple fallback -- fallback to en if the
    # translation was missing.  If the translation isn't
    # in en either, then it will raise again.
    I18n.translate(*(args.push(opts.merge(:locale => :en))))
end
		</pre>
In the first three line of this def, we set up the opts . and we use the class Config which defined in the same file above. and the code is
<pre>
class Config
    @locale = nil

    class << self
      attr_writer :locale
      def locale
        @locale || I18n.locale.downcase
      end
    end
end
</pre>
this gonna be the key of the translation in the next step. Then if missing the translation Data, if make it "en" as default. but for a record, if the en translation file was missing too, there will be a mistake raise again.
	</p>
</div>